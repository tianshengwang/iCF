% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/best_tree_MSegar.R
\name{get_r_loss}
\alias{get_r_loss}
\title{Function that takes as input a tree, and calculates the r_loss of a specific node, specified by the index.}
\usage{
get_r_loss(
  Y,
  tree,
  index,
  cost = 0,
  prune_info,
  W.orig = NULL,
  W.hat = NULL,
  M.hat = NULL,
  Tau.hat = NULL
)
}
\arguments{
\item{Y}{The Y values of the data}

\item{tree}{The tree on which to calculate r_loss}

\item{index}{The index of the specific node whose r_loss we want}

\item{cost}{This is the cost that we pay if we do not prune the tree.}

\item{prune_info}{This is list that corresponds to nodes of the tree. Each element keeps track of the samples in the node and whether the node is a leaf in the pruned tree.}

\item{W.orig}{W values that indicate treatment; used for causal forest.}

\item{W.hat}{Fitted W.hat values for causal forest}

\item{M.hat}{M.hat for causal forest}

\item{Tau.hat}{Fitten tau values for causal forest}
}
\value{
The r_loss for the specified node, and the updated prune_info which keeps track of what nodes are now leaves.
}
\description{
Function that takes as input a tree, and calculates the r_loss of a specific node, specified by the index.
}
\examples{
\dontrun{
# Train a regression forest
n <- 50; p <- 10
X2 <- matrix(rnorm(n*p), n, p)
Y2 <- X2[,1] * rnorm(n)
forest <- grf::regression_forest(X2,Y2)
tree <- grf::get_tree(forest, 1)

# Calculate the r_loss of the tree
prune_info <- rep(list(list(is_pruned_leaf = FALSE, samples = c())), length(tree$nodes))
results <- get_r_loss(Y2, tree, 1, prune_info = prune_info)

# Caluculate the r_loss of the 3rd node
prune_info <- rep(list(list(is_pruned_leaf = FALSE, samples = c())), length(tree$nodes))
results <- get_r_loss(Y, tree, 3, prune_info)
}

}
